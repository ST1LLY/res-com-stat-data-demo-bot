"""
–ú–æ–¥—É–ª—å –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä –¥–ª—è –ª–æ–≥–æ–≤ —á–∞—Ç-–±–æ—Ç–∞
"""
import logging


class ChatConnector():
    """–ö–ª–∞—Å—Å –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ —á–∞—Ç-–±–æ—Ç–æ–º –≤ –∫–∞–Ω–∞–ª
    """

    def __init__(self, notify_config):
        logging.debug('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è')
        self.bot_header = str(notify_config['header'])
        # self.bot = telepot.Bot(notify_config['token'])
        self.chat_id = notify_config['chat_id']
        logging.info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞')

    def send_message(self, text: str) -> None:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

        Args:
            text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        self.bot.sendMessage(self.chat_id, f'{self.bot_header} {text}', parse_mode='HTML')

    def send_error(self, text: str) -> None:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

        Args:
            text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        self.bot.sendMessage(self.chat_id, f'{self.bot_header} üÜò {text}')

    def send_success(self, text: str) -> None:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö

        Args:
            text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        self.bot.sendMessage(self.chat_id, f'{self.bot_header} ‚úÖ {text}')
